{% assign remaining_products = '' %}
{% for product in collections.all.products offset: section.settings.products_per_row  %}
    {% assign remaining_products = remaining_products | append: product.handle %}
    {% unless forloop.last %}
        {% assign remaining_products = remaining_products | append: ','  %}
    {% endunless %}
{% endfor %}
<div class="w-full">
    <all-products data-remaining_products="{{ remaining_products }}">
        data-products-per-row = "{{ section.settings.products_per_row }}"

        <div class="grid grid-cols-3 gap-4" style="--items-per-row; {{ section.settings.products_per_row }}">
            {% for product in collections.all.products limit:section.settings.products_per_row %}
                {% render 'card-product', card_product: product %}
            {% endfor %}
        </div>
        <button class="button">Load More</button>
    </all-products>
</div>

<script>
    class AllProducts extends HTMLElement {
        constructor(){
            super();
            this.loadMoreButton = this.querySelector("button");
            this.prodcutsPerRow = this.dataset.prodcutsPerRow;
            this.remaining_products = this.dataset.remaining_products.split(",");
            this.grid = this.querySelector(".grid");
            this.loadMoreButton.addEventListener("click", this.loadMoreProducts.bind(this));
        }
        async loadMoreProducts() {
            console.log("loading more products");
        }
    }
    customElements.define('all-products', AllProducts);
</script>


{% schema %}
    {
        "name": "All Products",
        "settings": [
            {
                "type": "number",
                "id": "products_per_row",
                "label": "Products Per Row"
            }
        ],
        "presets": [
        {
            "name": "All Products"
        }
        ]
    }
{% endschema %}